AWSTemplateFormatVersion: 2010-09-09
Description: Default Crafter Serverless Site Stack
Parameters:
  SiteName:
    Type: String
  S3BucketName:
    Type: String
  DeliveryLBDomainName:
    Type: String
  CloudFrontCertificateArn:
    Type: String
  LBOriginCacheBehaviorAllowedMethods:
    Type: CommaDelimitedList
    Default: 'GET,HEAD,OPTIONS,PUT,POST,PATCH,DELETE'
  LBOriginKeepaliveTimeout:
    Type: Number
    Default: 5
  LBOriginReadTimeout:
    Type: Number
    Default: 60
  S3OriginCacheBehaviorAllowedMethods:
    Type: CommaDelimitedList
    Default: 'HEAD,GET'
  S3OriginCacheBehaviorCachedMethods:
    Type: CommaDelimitedList
    Default: 'HEAD,GET'
  S3OriginCacheBehaviorForwardedHeaderValues:
    Type: CommaDelimitedList
    Default: 'Access-Control-Request-Headers,Access-Control-Request-Method,Origin'
  CloudFrontPriceClass:
    Type: String
    Default: PriceClass_100
    AllowedValues:
      - PriceClass_100
      - PriceClass_200
      - PriceClass_All
  S3CorsAllowedHeaders:
    Type: CommaDelimitedList
    Default: '*'
  S3CorsAllowedMethods:
    Type: CommaDelimitedList
    Default: 'HEAD,GET'
  S3CorsAllowedOrigins:
    Type: CommaDelimitedList
    Default: '*'
  S3CorsMaxAge:
    Type: String
    Default: 3000
Resources:
  CloudFrontOriginAccessIdentity:
    Type: 'AWS::CloudFront::CloudFrontOriginAccessIdentity'
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub 'OAI for CloudFront of site ${SiteName}'
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref S3BucketName
      AccessControl: Private
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders: !Ref S3CorsAllowedHeaders
            AllowedMethods: !Ref S3CorsAllowedMethods
            AllowedOrigins: !Ref S3CorsAllowedOrigins
            MaxAge: !Ref S3CorsMaxAge
  S3BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId
            Action: 's3:GetObject'
            Resource: !Sub 'arn:aws:s3:::${S3Bucket}/*'
  CloudFrontDistribution:
    Type: 'AWS::CloudFront::Distribution'
    Properties:
      DistributionConfig:
        Comment: !Sub 'CloudFront Distribution for site ${SiteName}'
        Enabled: true
        PriceClass: !Ref CloudFrontPriceClass
        DefaultCacheBehavior:
          TargetOriginId: !Sub 'LB-${LBDomainName}'
          ViewerProtocolPolicy: redirect-to-https
          MinTTL: 0
          AllowedMethods: !Ref LBOriginCacheBehaviorAllowedMethods
          ForwardedValues:
            QueryString: true
            Headers: ['*']
            Cookies:
              Forward: all
        CacheBehaviors:
          - PathPattern: '/static-assets/*'
            TargetOriginId: !Sub 'S3-${S3Bucket}'
            ViewerProtocolPolicy: redirect-to-https
            MinTTL: 0
            AllowedMethods: !Ref S3OriginCacheBehaviorAllowedMethods
            CachedMethods: !Ref S3OriginCacheBehaviorCachedMethods
            ForwardedValues:
              QueryString: false
              Headers: !Ref S3OriginCacheBehaviorForwardedHeaderValues
              Cookies:
                Forward: none
        Origins:
          - DomainName: !Ref DeliveryLBDomainName
            Id: !Sub 'LB-${LBDomainName}'
            OriginPath: !Sub '/${SiteName}'
            CustomOriginConfig:
              OriginKeepaliveTimeout: !Ref LBOriginKeepaliveTimeout
              OriginReadTimeout: !Ref LBOriginReadTimeout
              OriginProtocolPolicy: http-only
              OriginSSLProtocols: ['TLSv1', 'TLSv1.1', 'TLSv1.2']
            OriginCustomHeaders:
              - HeaderName: X-Crafter-Site
                HeaderValue: !Ref SiteName
          - DomainName: !Sub '${S3Bucket}.s3.amazonaws.com'
            Id: !Sub 'S3-${S3Bucket}'
            OriginPath: !Sub '/${SiteName}'
            S3OriginConfig:
              OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}'
        Restrictions:
          GeoRestriction:
            RestrictionType: none
            Locations: []
        ViewerCertificate:
          AcmCertificateArn: !Ref CloudFrontCertificateArn
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1
Outputs:
  CloudFrontDistributionId:
    Value: !Ref CloudFrontDistribution
  CloudFrontDistributionDomainName:
    Value: !GetAtt CloudFrontDistribution.DomainName